{"version":3,"sources":["components/WeatherInfo.js","App.js","index.js"],"names":["WeatherInfo","props","className","icon","value","name","WeatherIcons","App","useState","flipped","setFlipped","input","setInput","data","setData","inputRef","useRef","backBtnRef","useEffect","current","focus","searchHandler","e","a","preventDefault","Axios","get","env","API_KEY","catch","console","clear","res","prev","convertTime","timeStamp","Date","getHours","getMinutes","sys","country","Math","floor","main","temp","src","weather","alt","description","sunrise","sunset","humidity","wind","speed","onClick","ref","type","placeholder","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55ea0ec7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction WeatherInfo(props) {\r\n  return (\r\n    <div className=\"info-container\">\r\n      {props.icon}\r\n      <span className=\"info__value\">{props.value}</span>\r\n      <span className=\"info__name\">{props.name}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherInfo;\r\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport Axios from \"axios\";\nimport env from \"react-dotenv\";\n\nimport { FaWind } from \"react-icons/fa\";\nimport { FiSunrise, FiSunset } from \"react-icons/fi\";\nimport { WiHumidity } from \"react-icons/wi\";\n\nimport WeatherInfo from \"./components/WeatherInfo\";\n\nconst WeatherIcons = {\n  \"01d\": \"../Assets/icons/sunny.svg\",\n  \"01n\": \"../Assets/icons/night.svg\",\n  \"02d\": \"../Assets/icons/day.svg\",\n  \"02n\": \"../Assets/icons/cloudy-night.svg\",\n  \"03d\": \"../Assets/icons/cloudy.svg\",\n  \"03n\": \"../Assets/icons/cloudy.svg\",\n  \"04d\": \"../Assets/icons/perfect-day.svg\",\n  \"04n\": \"../Assets/icons/cloudy-night.svg\",\n  \"09d\": \"../Assets/icons/rain.svg\",\n  \"09n\": \"../Assets/icons/rain-night.svg\",\n  \"10d\": \"../Assets/icons/rain.svg\",\n  \"10n\": \"../Assets/icons/rain-night.svg\",\n  \"11d\": \"../Assets/icons/storm.svg\",\n  \"11n\": \"../Assets/icons/storm.svg\",\n};\n\nfunction App() {\n  const [flipped, setFlipped] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [data, setData] = useState();\n\n  const inputRef = useRef();\n  const backBtnRef = useRef();\n\n  useEffect(() => {\n    if (!flipped) {\n      inputRef.current.focus();\n    } else {\n      backBtnRef.current.focus();\n    }\n  }, [flipped]);\n\n  const inputChangeHandler = (e) => {\n    setInput(e.target.value);\n  };\n\n  const searchHandler = async (e) => {\n    e.preventDefault();\n    const res = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=${env.API_KEY}`\n    ).catch(console.clear);\n\n    if (res) {\n      setData(res.data);\n      setFlipped((prev) => !prev);\n    }\n  };\n\n  const backHandler = () => {\n    setFlipped((prev) => !prev);\n    setInput(\"\");\n    setData();\n  };\n\n  const convertTime = (timeStamp) => {\n    return `${new Date(timeStamp * 1000).getHours()}:${new Date(\n      timeStamp * 1000\n    ).getMinutes()}`;\n  };\n\n  return (\n    <div className=\"weather-info\">\n      <h1 className=\"title\">Weather Info</h1>\n      <div className={`wrapper ${flipped ? \"flipped\" : \"\"}`}>\n        {!flipped ? (\n          <div className=\"front\">\n            <form>\n              <input\n                className=\"search-bar\"\n                type=\"text\"\n                placeholder=\"Enter a city name...\"\n                value={input}\n                onChange={inputChangeHandler}\n                ref={inputRef}\n              />\n              <button className=\"search-btn\" onClick={searchHandler}>\n                Search\n              </button>\n            </form>\n            <img src={WeatherIcons[\"04d\"]} alt=\"home-img\" />\n          </div>\n        ) : (\n          <div className=\"back\">\n            <h2 className=\"location\">\n              {data.name} - {data.sys.country}\n            </h2>\n            <div className=\"main-container\">\n              <h3 className=\"temp\">{`${Math.floor(\n                data.main.temp - 273\n              )}Â°C`}</h3>\n              <img src={WeatherIcons[data.weather[0].icon]} alt=\"weather-img\" />\n              <p className=\"description\">{data.weather[0].description}</p>\n            </div>\n            <h3 className=\"more-info\">More info</h3>\n            <div className=\"container\">\n              <WeatherInfo\n                icon={<FiSunrise className=\"icon\" />}\n                name=\"sunrise\"\n                value={convertTime(data.sys.sunrise)}\n              />\n              <WeatherInfo\n                icon={<FiSunset className=\"icon\" />}\n                name=\"sunset\"\n                value={convertTime(data.sys.sunset)}\n              />\n              <WeatherInfo\n                icon={<WiHumidity className=\"icon\" />}\n                name=\"humidity\"\n                value={data.main.humidity}\n              />\n              <WeatherInfo\n                icon={<FaWind className=\"icon\" />}\n                name=\"wind\"\n                value={data.wind.speed}\n              />\n            </div>\n            <button className=\"back-btn\" onClick={backHandler} ref={backBtnRef}>\n              Back\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}